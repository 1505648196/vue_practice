{"remainingRequest":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/src/components/form/KFormItem.vue?vue&type=style&index=0&id=341b9e67&scoped=true&lang=css&","dependencies":[{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/src/components/form/KFormItem.vue","mtime":1596770477787},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZXJyb3IgewogIGNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["KFormItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA","file":"KFormItem.vue","sourceRoot":"src/components/form","sourcesContent":["<template>\n  <div>\n    <!-- label标签 -->\n    <label v-if=\"label\">{{label}}</label>\n    <!-- 容器，放插槽 -->\n    <slot></slot>\n    <!-- 错误信息展示 -->\n    <p v-if=\"error\" class=\"error\">{{error}}</p>\n  </div>\n</template>\n\n<script>\nimport Schema from \"async-validator\";\n\nexport default {\n  name: \"KFormItem\",\n  componentName: \"KFormItem\",\n  inject: [\"form\"],\n  data() {\n    return {\n      error: \"\"\n    };\n  },\n  props: {\n    label: {\n      type: String,\n      default: \"\"\n    },\n    prop: {\n      type: String,\n      default: \"\"\n    }\n  },\n  mounted() {\n    // 监听校验事件\n    this.$on(\"validate\", (value) => {\n      console.log(value);\n      this.validate();\n    });\n   \n  },\n  methods: {\n    //接受子组件input框输入时通过$parent派发的validate校验\n    //即时返回校验信息\n\n    validate() {\n      // 执行校验\n      // 1.获取值和校验规则\n      const rules = this.form.rules[this.prop];\n      const value = this.form.model[this.prop];\n\n      // 2.执行校验：使用官方也使用的async-validator\n      // 创建描述对象\n      const descriptor = { [this.prop]: rules };\n      // 创建校验器\n      const validator = new Schema(descriptor);\n      // 执行校验\n      return validator.validate({ [this.prop]: value }, errors => {\n        // 如果errors存在，则说明校验失败\n        if (errors) {\n          this.error = errors[0].message;\n        } else {\n          this.error = \"\";\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.error {\n  color: red;\n}\n</style>"]}]}