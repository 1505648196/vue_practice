{"remainingRequest":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/src/components/form/KForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/src/components/form/KForm.vue","mtime":1596610663910},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luozien/Desktop/vue全栈架构师/01/vue-study-web18/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOaIkeS7rOW5s+aXtuWGmeeahOe7hOS7tuaYr+S4gOS4que7hOS7tumFjee9ruWvueixoQpleHBvcnQgZGVmYXVsdCB7CiAgcHJvdmlkZSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOebtOaOpeaKiuW9k+WJjee7hOS7tuWunuS+i+S8oOmAkuS4i+WOuwogICAgICAvLyDkvKDpgJLkuIvljrvnmoTlr7nosaHmmK/lk43lupTlvI/nmoTliJnov5jlj6/ku6Xlk43lupTlvI8KICAgICAgZm9ybTogdGhpcwogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICAvLyDmlbDmja7mqKHlnosKICAgIG1vZGVsOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBydWxlczogT2JqZWN0CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZShjYikgewogICAgICAvLyDpgY3ljobogprlrZDph4zpnaLnmoTmiYDmnIlGb3JtSXRlbe+8jOaJp+ihjOS7luS7rOeahHZhbGlkYXRl5pa55rOVCiAgICAgIC8vIOWFqOmDqOmAmui/h+aJjeeul+mAmui/hwogICAgICAvLyB0YXNrc+aYr+agoemqjOe7k+aenOeahFByb21pc2Xnu4TmiJDnmoTmlbDnu4QKICAgICAgY29uc3QgdGFza3MgPSB0aGlzLiRjaGlsZHJlbgogICAgICAgIC5maWx0ZXIoaXRlbSA9PiBpdGVtLnByb3ApIC8v6L+H5rukcHJvcOeahOWxnuaApwogICAgICAgIC5tYXAoaXRlbSA9PiBpdGVtLnZhbGlkYXRlKCkpOwogICAgICAvLyDnu5/kuIDliKTmlq0KICAgICAgUHJvbWlzZS5hbGwodGFza3MpCiAgICAgICAgLnRoZW4oKCkgPT4gY2IodHJ1ZSkpCiAgICAgICAgLmNhdGNoKCgpID0+IGNiKGZhbHNlKSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["KForm.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"KForm.vue","sourceRoot":"src/components/form","sourcesContent":["<template>\n  <div>\n    <!-- 容器：存放所有表单项 -->\n    <!-- 存储值载体：保存大家数据和校验规则 -->\n    <slot></slot>\n  </div>\n</template>\n\n<script>\n// 我们平时写的组件是一个组件配置对象\nexport default {\n  provide() {\n    return {\n      // 直接把当前组件实例传递下去\n      // 传递下去的对象是响应式的则还可以响应式\n      form: this\n    };\n  },\n  props: {\n    // 数据模型\n    model: {\n      type: Object,\n      required: true\n    },\n    rules: Object\n  },\n  methods: {\n    validate(cb) {\n      // 遍历肚子里面的所有FormItem，执行他们的validate方法\n      // 全部通过才算通过\n      // tasks是校验结果的Promise组成的数组\n      const tasks = this.$children\n        .filter(item => item.prop) //过滤prop的属性\n        .map(item => item.validate());\n      // 统一判断\n      Promise.all(tasks)\n        .then(() => cb(true))\n        .catch(() => cb(false));\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>"]}]}